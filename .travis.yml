# Travis-CI.org build script

# We use the container-based infrastructure
# http://docs.travis-ci.com/user/migrating-from-legacy/?utm_source=legacy-notice&utm_medium=banner&utm_campaign=legacy-upgrade
sudo: false

# Default environment is Ubuntu 12.04.5 LTS "precise"
# which is pretty old.
# "trusty" is Ubuntu 14.04.5 LTS
dist: trusty

# python versions to test against...
language: python
python:
  - "2.7"
  - "3.6"

install:
    - pip install numpy
    - pip install scipy
    - pip install matplotlib
    - pip install numpydoc
    #- pip install astropy
    #- pip install photutils
    - pip install Sphinx
    - pip install coveralls
    - pip install fitsio
    # fitsio master version?
    # - pip install --no-deps --upgrade git+https://github.com/esheldon/fitsio.git#egg=fitsio

    - export WCSLIB_INC="-I/usr/include/wcslib-4.20"
    - export WCSLIB_LIB="-lwcs"
    - export SYSTEM_GSL=yes
    - export NETPBM_INC="-I$(pwd)"
    - pip install -v --no-deps --upgrade git+https://github.com/dstndstn/astrometry.net
    - python -c "import astrometry; print(astrometry.__file__)"
    #- export PATH=${PATH}:~/astrometry.net/blind/
    - python -c "import os; import astrometry; d=os.dirname; print(d(d(d(d(d(astrometry.__file__))))))"
    - export PATH=${PATH}:~/virtualenv/python*/bin
    - echo $PATH
    - ls ~/virtualenv/
    - ls ~/virtualenv/python*

before_script:
    # - export WCSLIB_INC="-I/usr/include/wcslib-4.20"
    # - export WCSLIB_LIB="-lwcs"
    # - export SYSTEM_GSL=yes
    # - export NETPBM_INC="-I$(pwd)"
    # 
    # - if [ ! -d "$HOME/astrometry.net" ]; then (cd $HOME; git clone https://github.com/dstndstn/astrometry.net.git; cd astrometry.net; ln -sf /usr/include netpbm; make && make py); fi
    # - (cd $HOME/astrometry.net && git pull && make && make py) || (rm -Rf $HOME/astrometry.net && cd $HOME && git clone https://github.com/dstndstn/astrometry.net.git && cd astrometry.net && make && make py)
    # - ln -s $HOME/astrometry.net astrometry
    # # for fitsverify, required in some tests
    # - export PATH=${PATH}:~/astrometry.net/blind/

script:
    #- export PYTHONPATH=${PYTHONPATH}:$HOME/astrometry.net
    - python setup.py install
    - make doc
    - echo $PYTHONPATH
    - coverage erase
    # Tell coverage where to write its results, for when we (cd ...; coverage) below.
    - export COVERAGE_FILE=$(pwd)/.coverage
    # does this hit the installed version rather than in-place?
    - (cd test; python -c "import tractor.emfit; print(tractor.emfit.__file__)")
    - (cd test; coverage run test_psfex.py)
    - (cd test; coverage run -a test_sdss.py)
    - (cd test; coverage run -a test_tractor.py)
    - (cd test; coverage run -a test_galaxy.py)
    - (cd tractor; coverage run -a mixture_profiles.py)
    - export SDSS_DATA=$(pwd)/test/data-sdss
    - (cd examples; coverage run -a tractor-sdss-synth.py --roi 0 100 0 100 --run 1000 --camcol 1 --field 100 --band r --sdss-dir ${SDSS_DATA} --const-invvar --no-flipbook)
    - (cd examples; coverage run -a mini.py)

after_success:
    - coveralls

addons:
  apt:
    packages:
    - libnetpbm10
    - libnetpbm10-dev
    - wcslib-dev
    - libcfitsio3
    - libcfitsio3-dev
    - swig
    - gsl-bin
    - libgsl0-dev

cache:
  directories:
  - $HOME/cache/.pip
  #- $HOME/astrometry.net
  # pip install --local goes here:
  - $HOME/.local
